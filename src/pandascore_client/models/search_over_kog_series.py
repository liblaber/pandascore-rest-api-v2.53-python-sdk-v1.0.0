# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .opponent_type import OpponentType


@JsonMap({})
class SearchOverKogSeries(BaseModel):
    """SearchOverKogSeries

    :param name: name, defaults to None
    :type name: str, optional
    :param season: season, defaults to None
    :type season: str, optional
    :param slug: slug, defaults to None
    :type slug: str, optional
    :param winner_type: winner_type, defaults to None
    :type winner_type: OpponentType, optional
    """

    def __init__(
        self,
        name: str = None,
        season: str = None,
        slug: str = None,
        winner_type: OpponentType = None,
    ):
        """SearchOverKogSeries

        :param name: name, defaults to None
        :type name: str, optional
        :param season: season, defaults to None
        :type season: str, optional
        :param slug: slug, defaults to None
        :type slug: str, optional
        :param winner_type: winner_type, defaults to None
        :type winner_type: OpponentType, optional
        """
        if name is not None:
            self.name = name
        if season is not None:
            self.season = season
        if slug is not None:
            self.slug = self._define_str(
                "slug", slug, pattern="^[a-z0-9_-]+$", min_length=1
            )
        if winner_type is not None:
            self.winner_type = self._enum_matching(
                winner_type, OpponentType.list(), "winner_type"
            )
