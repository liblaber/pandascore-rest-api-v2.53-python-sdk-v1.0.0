# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .valorant_agent_stats import ValorantAgentStats
from .valorant_player_clutch_wins import ValorantPlayerClutchWins
from .valorant_game_player import ValorantGamePlayer
from .base_player import BasePlayer
from .valorant_player_streaks import ValorantPlayerStreaks


@JsonMap({})
class ValorantStatsForPlayer(BaseModel):
    """ValorantStatsForPlayer

    :param agents: Agents picks, wins, and losses stats for this map
    :type agents: List[ValorantAgentStats]
    :param assists: Number of player's assists
    :type assists: int
    :param average_damage_per_round: Average damage per round (ADR) of the player
    :type average_damage_per_round: float
    :param clutch_wins: Round wins when the player was the last team member alive
    :type clutch_wins: ValorantPlayerClutchWins
    :param deaths: Number of player's death
    :type deaths: int
    :param defused_spikes: Number of spikes defused by the player
    :type defused_spikes: int
    :param first_deaths: Number of rounds where the player died first
    :type first_deaths: int
    :param first_kill_percentage: First kill percentage of the player
    :type first_kill_percentage: float
    :param first_kills: Number of rounds where the player did the first kill
    :type first_kills: int
    :param headshot_percentage: Percentage of headshots within the player's shots
    :type headshot_percentage: float
    :param kills: Number of player's kills
    :type kills: int
    :param last_games: last_games
    :type last_games: List[ValorantGamePlayer]
    :param planted_spikes: Number of spikes planted by the player
    :type planted_spikes: int
    :param player: player
    :type player: BasePlayer
    :param streaks: Streaks done by the player (in a given round)
    :type streaks: ValorantPlayerStreaks
    :param total_games: Amount of games played by the player
    :type total_games: int
    """

    def __init__(
        self,
        agents: List[ValorantAgentStats],
        assists: int,
        average_damage_per_round: float,
        clutch_wins: ValorantPlayerClutchWins,
        deaths: int,
        defused_spikes: int,
        first_deaths: int,
        first_kill_percentage: float,
        first_kills: int,
        headshot_percentage: float,
        kills: int,
        last_games: List[ValorantGamePlayer],
        planted_spikes: int,
        player: BasePlayer,
        streaks: ValorantPlayerStreaks,
        total_games: int,
    ):
        """ValorantStatsForPlayer

        :param agents: Agents picks, wins, and losses stats for this map
        :type agents: List[ValorantAgentStats]
        :param assists: Number of player's assists
        :type assists: int
        :param average_damage_per_round: Average damage per round (ADR) of the player
        :type average_damage_per_round: float
        :param clutch_wins: Round wins when the player was the last team member alive
        :type clutch_wins: ValorantPlayerClutchWins
        :param deaths: Number of player's death
        :type deaths: int
        :param defused_spikes: Number of spikes defused by the player
        :type defused_spikes: int
        :param first_deaths: Number of rounds where the player died first
        :type first_deaths: int
        :param first_kill_percentage: First kill percentage of the player
        :type first_kill_percentage: float
        :param first_kills: Number of rounds where the player did the first kill
        :type first_kills: int
        :param headshot_percentage: Percentage of headshots within the player's shots
        :type headshot_percentage: float
        :param kills: Number of player's kills
        :type kills: int
        :param last_games: last_games
        :type last_games: List[ValorantGamePlayer]
        :param planted_spikes: Number of spikes planted by the player
        :type planted_spikes: int
        :param player: player
        :type player: BasePlayer
        :param streaks: Streaks done by the player (in a given round)
        :type streaks: ValorantPlayerStreaks
        :param total_games: Amount of games played by the player
        :type total_games: int
        """
        self.agents = self._define_list(agents, ValorantAgentStats)
        self.assists = self._define_number("assists", assists, nullable=True, ge=0)
        self.average_damage_per_round = self._define_number(
            "average_damage_per_round", average_damage_per_round, nullable=True, ge=0
        )
        self.clutch_wins = self._define_object(clutch_wins, ValorantPlayerClutchWins)
        self.deaths = self._define_number("deaths", deaths, nullable=True, ge=0)
        self.defused_spikes = self._define_number(
            "defused_spikes", defused_spikes, nullable=True, ge=0
        )
        self.first_deaths = self._define_number(
            "first_deaths", first_deaths, nullable=True, ge=0
        )
        self.first_kill_percentage = self._define_number(
            "first_kill_percentage", first_kill_percentage, nullable=True, ge=0, le=100
        )
        self.first_kills = self._define_number(
            "first_kills", first_kills, nullable=True, ge=0
        )
        self.headshot_percentage = self._define_number(
            "headshot_percentage", headshot_percentage, nullable=True, ge=0, le=100
        )
        self.kills = self._define_number("kills", kills, nullable=True, ge=0)
        self.last_games = self._define_list(last_games, ValorantGamePlayer)
        self.planted_spikes = self._define_number(
            "planted_spikes", planted_spikes, nullable=True, ge=0
        )
        self.player = self._define_object(player, BasePlayer)
        self.streaks = self._define_object(streaks, ValorantPlayerStreaks)
        self.total_games = self._define_number("total_games", total_games, ge=0)
