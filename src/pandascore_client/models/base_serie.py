# This file was generated by liblab | https://liblab.com/

from enum import Enum
from typing import Union
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .utils.one_of_base_model import OneOfBaseModel


class BaseSerieWinnerIdGuard(OneOfBaseModel):
    class_list = {"int": int, "int": int}


BaseSerieWinnerId = Union[int, int]


class BaseSerieWinnerType(Enum):
    """An enumeration representing different categories.

    :cvar PLAYER: "Player"
    :vartype PLAYER: str
    :cvar TEAM: "Team"
    :vartype TEAM: str
    """

    PLAYER = "Player"
    TEAM = "Team"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, BaseSerieWinnerType._member_map_.values()))


@JsonMap({"id_": "id"})
class BaseSerie(BaseModel):
    """BaseSerie

    :param begin_at: begin_at
    :type begin_at: str
    :param end_at: end_at
    :type end_at: str
    :param full_name: full_name
    :type full_name: str
    :param id_: id_
    :type id_: int
    :param league_id: league_id
    :type league_id: int
    :param modified_at: modified_at
    :type modified_at: str
    :param name: name
    :type name: str
    :param season: season
    :type season: str
    :param slug: slug
    :type slug: str
    :param winner_id: winner_id
    :type winner_id: BaseSerieWinnerId
    :param winner_type: winner_type
    :type winner_type: BaseSerieWinnerType
    :param year: year
    :type year: int
    """

    def __init__(
        self,
        begin_at: str,
        end_at: str,
        full_name: str,
        id_: int,
        league_id: int,
        modified_at: str,
        name: str,
        season: str,
        slug: str,
        winner_id: BaseSerieWinnerId,
        winner_type: BaseSerieWinnerType,
        year: int,
    ):
        """BaseSerie

        :param begin_at: begin_at
        :type begin_at: str
        :param end_at: end_at
        :type end_at: str
        :param full_name: full_name
        :type full_name: str
        :param id_: id_
        :type id_: int
        :param league_id: league_id
        :type league_id: int
        :param modified_at: modified_at
        :type modified_at: str
        :param name: name
        :type name: str
        :param season: season
        :type season: str
        :param slug: slug
        :type slug: str
        :param winner_id: winner_id
        :type winner_id: BaseSerieWinnerId
        :param winner_type: winner_type
        :type winner_type: BaseSerieWinnerType
        :param year: year
        :type year: int
        """
        self.begin_at = self._define_str(
            "begin_at", begin_at, nullable=True, min_length=1
        )
        self.end_at = self._define_str("end_at", end_at, nullable=True, min_length=1)
        self.full_name = full_name
        self.id_ = self._define_number("id_", id_, ge=1)
        self.league_id = self._define_number("league_id", league_id, ge=1)
        self.modified_at = self._define_str("modified_at", modified_at, min_length=1)
        self.name = self._define_str("name", name, nullable=True)
        self.season = self._define_str("season", season, nullable=True)
        self.slug = self._define_str(
            "slug", slug, pattern="^[a-z0-9_-]+$", min_length=1
        )
        self.winner_id = BaseSerieWinnerIdGuard.return_one_of(winner_id)
        self.winner_type = self._enum_matching(
            winner_type, BaseSerieWinnerType.list(), "winner_type"
        )
        self.year = self._define_number("year", year, nullable=True, ge=2012)
